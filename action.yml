# SPDX-FileCopyrightText: 2025 DB Systel GmbH
#
# SPDX-License-Identifier: Apache-2.0

name: "Website Preview and Deployment via SSH"
description: "Deploys a built website artifact to a production and preview environment via SSH, with optional link checking."
author: "OpenRail Association"
branding:
  icon: upload-cloud
  color: purple

inputs:
  artifact_name:
    description: "The name of the uploaded artifact to deploy."
    required: true

  condition_production:
    description: "Condition to deploy to production (e.g. `FIXME`)"
    required: true

  domain_production:
    description: "Domain name for the production deployment, e.g. https://example.com"
    required: true

  domain_preview:
    description: "Domain name for the preview deployment, e.g. https://preview.example.com"
    required: true

  dir_base:
    description: "Remote base directory (e.g. /var/www/virtual)"
    required: true

  dir_production:
    description: "Full path for production deployment"
    required: true

  dir_preview_base:
    description: "Preview base domain (e.g. preview)"
    required: true

  dir_preview_subdir:
    description: "Preview subdir (e.g. pr-123)"
    required: true

  ssh_host:
    description: "SSH hostname (e.g. webspace.example.org)"
    required: true

  ssh_user:
    description: "SSH username"
    required: true

  ssh_key:
    description: "SSH private key for authenticating with the deployment server"
    required: true

  ssh_port:
    description: "SSH port"
    required: false
    default: "22"

  ssh_timeout:
    description: "SSH connection timeout (e.g. 1m)"
    required: false
    default: "1m"

  ssh_command_timeout:
    description: "SSH command timeout (e.g. 2m)"
    required: false
    default: "2m"

  ssh_rm:
    description: "Remove remote directory before deploying (true/false)"
    required: false
    default: "true"

  ssh_strip_components:
    description: "How many path components to strip (for tar/scp unpacking)"
    required: false
    default: "1"

  linkchecker_enabled:
    description: "Enable link checker (true/false)"
    required: false
    default: "true"

  linkchecker_exclude:
    description: "Comma-separated list of domains to exclude from link checker"
    required: false
    default: ""

  linkchecker_include_fragments:
    description: "Include anchor fragments in link checking"
    required: false
    default: "true"

  linkchecker_max_concurrency:
    description: "Max concurrent requests for link checker"
    required: false
    default: "1"

  linkchecker_user_agent:
    description: "User-Agent for link checking"
    required: false
    default: "Mozilla/5.0 (Windows NT 10.0; Win64; x64)..."

  linkchecker_retry_times:
    description: "Retry delay in seconds for link checking"
    required: false
    default: "5"

  linkchecker_fail_on_errors:
    description: "Fail workflow on link check errors (true/false)"
    required: false
    default: "false"

  linkchecker_verbose:
    description: "Turn on verbose linkchecker logging in action logs (true/false)"
    required: false
    default: "false"

  sticky_comment_enabled:
    description: "Whether to enable sticky comments for the pull request. Defaults to true."
    required: false
    default: "true"

  step_summary_enabled:
    description: "Whether to enable step summaries in the GitHub Actions UI. Defaults to true."
    required: false
    default: "true"

outputs:
  url:
    description: "The URL of the deployed production or preview website"

runs:
  using: "composite"
  steps:
    # ----------------------------------------------------------------------------------------------
    # VARIABLES AND ENVIRONMENT SETUP
    # ----------------------------------------------------------------------------------------------
    - name: "Vars: PR Closed/Merged"
      shell: bash
      run: |
        echo "IS_PR_CLOSED_OR_MERGED=${{ github.event.pull_request && (github.event.pull_request.closed_at || github.event.pull_request.merged) }}" >> $GITHUB_ENV

    - name: "Vars: Prod or Preview"
      shell: bash
      run: |
        echo "IS_PRODUCTION=${{ inputs.condition_production == 'true' && env.IS_PR_CLOSED_OR_MERGED != 'true' }}" >> $GITHUB_ENV
        echo "IS_PREVIEW=${{ github.event.pull_request && env.IS_PR_CLOSED_OR_MERGED != 'true' }}" >> $GITHUB_ENV

    - name: "Vars: Source and Target Directory"
      shell: bash
      run: |
        if ${{ env.IS_PRODUCTION }}; then
          echo "SOURCE_DIR=${{ inputs.artifact_name }}" >> $GITHUB_ENV
          echo "TARGET_DIR=${{ inputs.dir_base }}/${{ inputs.dir_production }}" >> $GITHUB_ENV
        else
          echo "SOURCE_DIR=${{ inputs.artifact_name }}/${{ inputs.dir_preview_subdir }}" >> $GITHUB_ENV
          echo "TARGET_DIR=${{ inputs.dir_base }}/${{ inputs.dir_preview_base }}/${{ inputs.dir_preview_subdir }}" >> $GITHUB_ENV
        fi

    - name: "Vars: Helper and linkcheck Variables"
      shell: bash
      run: |
        echo "DATETIME=$(date '+%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_ENV
        if ${{ inputs.linkchecker_include_fragments }}; then
          echo "LINKCHECKER_FRAGMENTS=--include-fragments" >> $GITHUB_ENV
        else
          echo "LINKCHECKER_FRAGMENTS=" >> $GITHUB_ENV
        fi
        if ${{ inputs.linkchecker_verbose }}; then
          echo "LINKCHECKER_VERBOSE=--verbose" >> $GITHUB_ENV
        else
          echo "LINKCHECKER_VERBOSE=" >> $GITHUB_ENV
        fi
        if [ -n "${{ inputs.linkchecker_exclude }}" ]; then
          echo "LINKCHECKER_EXCLUDE=$(echo '${{ inputs.linkchecker_exclude }}' | sed 's/,/ --exclude /g; s/^/--exclude /')" >> $GITHUB_ENV
        else
          echo "LINKCHECKER_EXCLUDE=" >> $GITHUB_ENV
        fi

    # - name: "Vars: debug"
    #   shell: bash
    #   run: |
    #     echo "Inputs: ${{ toJson(inputs) }}"
    #     echo "Environment: ${{ toJson(env) }}"

    # ----------------------------------------------------------------------------------------------
    # ARTIFACT DOWNLOAD
    # ----------------------------------------------------------------------------------------------
    - name: Download Artifact
      uses: actions/download-artifact@v4
      if: env.IS_PRODUCTION == 'true' || env.IS_PREVIEW == 'true'
      with:
        name: ${{ inputs.artifact_name }}
        path: ./${{ env.SOURCE_DIR }}

    # ----------------------------------------------------------------------------------------------
    # LINK CHECKER
    # ----------------------------------------------------------------------------------------------
    - name: Run Link Checker
      if: ${{ inputs.linkchecker_enabled == 'true' && (env.IS_PRODUCTION == 'true' || env.IS_PREVIEW == 'true' ) }}
      uses: lycheeverse/lychee-action@v2
      with:
        args: >-
          -r ${{ inputs.linkchecker_retry_times }}
          -u "${{ inputs.linkchecker_user_agent }}"
          ${{ env.LINKCHECKER_FRAGMENTS }}
          ${{ env.LINKCHECKER_EXCLUDE }}
          ${{ env.LINKCHECKER_VERBOSE }}
          --max-concurrency ${{ inputs.linkchecker_max_concurrency }}
          --root-dir ${{ github.workspace }}/${{ inputs.artifact_name }}
          ${{ inputs.artifact_name }}
        fail: ${{ inputs.linkchecker_fail_on_errors }}

    # ----------------------------------------------------------------------------------------------
    # CASE: CONTENT FOR CLOSED OR MERGED PR
    # ----------------------------------------------------------------------------------------------
    - name: Prepare placeholder index.html
      if: env.IS_PR_CLOSED_OR_MERGED == 'true'
      shell: bash
      run: |
        rm -rfv ${{ env.SOURCE_DIR }}
        mkdir -p ${{ env.SOURCE_DIR }}
        echo "This PR has been closed or merged. The preview has been removed." > ${{ env.SOURCE_DIR }}/index.html

    # ----------------------------------------------------------------------------------------------
    # UPLOAD WEBSITE TO SERVER
    # ----------------------------------------------------------------------------------------------
    - name: Change path to source directory
      shell: bash
      run: cd ${{ env.SOURCE_DIR }}

    - name: Upload Website to Server
      uses: appleboy/scp-action@v1.0.0
      with:
        host: ${{ inputs.ssh_host }}
        username: ${{ inputs.ssh_user }}
        key: ${{ env.ssh_key }}
        port: ${{ inputs.ssh_port }}
        timeout: ${{ inputs.ssh_timeout }}
        command_timeout: ${{ inputs.ssh_command_timeout }}
        target: ${{ env.TARGET_DIR }}
        source: "./*"
        rm: ${{ inputs.ssh_rm }}
        strip_components: ${{ inputs.ssh_strip_components }}

    # ----------------------------------------------------------------------------------------------
    # REPORTING AND COMMENTS
    # ----------------------------------------------------------------------------------------------
    # - name: Add Production Summary
    #   if: ${{ inputs.condition_production == 'true' && inputs.step_summary_enabled == 'true' && env.pr_closed_merged != 'true' }}
    #   run: echo "# Website Deployment Summary\nDeployed website to production ${{ inputs.domain_production }}" >> $GITHUB_STEP_SUMMARY

    # - name: Sticky Preview Comment
    #   if: ${{ github.event.pull_request && env.pr_closed_merged == 'false' && inputs.sticky_comment_enabled == 'true' }}
    #   uses: marocchino/sticky-pull-request-comment@v2.9.4
    #   with:
    #     header: pr-preview
    #     message: |
    #       Pull Request Live Preview
    #       :---:
    #       | <p><br />:rocket: View preview at <br />${{ inputs.domain_preview }}/${{ inputs.dir_preview_subdir }}/<br /><br /></p>
    #       | <p>Last updated: ${{ env.DATETIME }}</p>

    # - name: Add Preview Summary
    #   if: ${{ github.event.pull_request && env.pr_closed_merged == 'false' && inputs.step_summary_enabled == 'true' }}
    #   run: echo "# Website Deployment Summary\nDeployed preview website to ${{ inputs.domain_preview }}/${{ inputs.dir_preview_subdir }}" >> $GITHUB_STEP_SUMMARY

    # - name: Sticky Comment - Preview Removed
    #   if: ${{ github.event.pull_request && env.pr_closed_merged != 'false' && inputs.sticky_comment_enabled == 'true' }}
    #   uses: marocchino/sticky-pull-request-comment@v2.9.4
    #   with:
    #     header: pr-preview
    #     message: |
    #       Pull Request Live Preview
    #       :---:
    #       | <p><br />:x: Preview has been removed.<br /><br /></p>

    # - name: Add Removal Summary
    #   if: ${{ github.event.pull_request && env.pr_closed_merged != 'false' && inputs.step_summary_enabled == 'true' }}
    #   run: echo "# Website Deployment Summary\nRemoved preview website at ${{ inputs.domain_preview }}/${{ inputs.dir_preview_subdir }}" >> $GITHUB_STEP_SUMMARY
